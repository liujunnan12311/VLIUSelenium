<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.1" jmeter="3.1 r1770033">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <longProp name="ThreadGroup.start_time">1488852439000</longProp>
        <longProp name="ThreadGroup.end_time">1488852439000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Login-Setup" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/authenticate?loginname=${UserName}&amp;password=${Password}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script"> import org.apache.jmeter.protocol.http.control.CookieManager;
 import org.apache.jmeter.protocol.http.control.Cookie;
 import org.apache.jmeter.protocol.http.control;

 CookieManager manager = ctx.getCurrentSampler().getCookieManager();
 props.put(&quot;cookiecount&quot;, String.valueOf(manager.getCookieCount()));

for (int i = 0; i &lt; manager.getCookieCount(); i++) {
    props.put(&quot;cookie_name&quot; + i, manager.get(i).getName());
    props.put(&quot;cookie_value&quot; + i, manager.get(i).getValue());
    props.put(&quot;cookie_domain&quot; + i, manager.get(i).getDomain());
    props.put(&quot;cookie_path&quot; + i, manager.get(i).getPath());
    props.put(&quot;cookie_expires&quot; + i, String.valueOf(manager.get(i).getExpires()));
    props.put(&quot;cookie_secure&quot; + i, String.valueOf(manager.get(i).getSecure()));
}</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_UserPermission" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProfileContentSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/ProfileContent?$d=y&amp;$m=n&amp;$f=Medium&amp;$o=DisplayOrder</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProfileUserPermissionsSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/ProfileUserPermissions?$d=y&amp;$m=n&amp;$t=UserPermissions&amp;$f=Large</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_CountryList" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CountryListSampler" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Search&quot;:{&quot;Query&quot;:{&quot;Joins&quot;:[],&quot;CriteriaList&quot;:[],&quot;Entity&quot;:&quot;Country&quot;},&quot;Options&quot;:{&quot;PageNumber&quot;:0,&quot;PageSize&quot;:0,&quot;OrderBy&quot;:[],&quot;UseDistinct&quot;:false}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/Country/search?$d=y&amp;$m=y</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_CountryListFilter" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CountryListFilterSampler" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Search&quot;:{&quot;Query&quot;:{&quot;Joins&quot;:[],&quot;CriteriaList&quot;:[{&quot;CriteriaList&quot;:null,&quot;ExistsSubquery&quot;:null,&quot;Filter&quot;:{&quot;Field&quot;:&quot;CountryCode&quot;,&quot;ComparisonOperator&quot;:8,&quot;Value&quot;:&quot;us&quot;},&quot;LogicalOperator&quot;:0,&quot;IsNegated&quot;:false}],&quot;Entity&quot;:&quot;Country&quot;},&quot;Options&quot;:{&quot;PageNumber&quot;:0,&quot;PageSize&quot;:0,&quot;OrderBy&quot;:[],&quot;UseDistinct&quot;:false}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/Country/search?$d=y&amp;$m=y&amp;$c=-589058901    </stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_CountryDetail" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="CountryDetailSampler" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Search&quot;:{&quot;Query&quot;:{&quot;Joins&quot;:[],&quot;CriteriaList&quot;:[{&quot;CriteriaList&quot;:null,&quot;ExistsSubquery&quot;:null,&quot;Filter&quot;:{&quot;Field&quot;:&quot;CountryCode&quot;,&quot;ComparisonOperator&quot;:1,&quot;Value&quot;:&quot;us&quot;},&quot;LogicalOperator&quot;:0,&quot;IsNegated&quot;:false}],&quot;Entity&quot;:&quot;Country&quot;},&quot;Options&quot;:{&quot;PageNumber&quot;:0,&quot;PageSize&quot;:0,&quot;OrderBy&quot;:[],&quot;UseDistinct&quot;:false}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/Country/search?$d=y&amp;$m=y&amp;$f=Large&amp;$e=WithholdingTax($c=-591059101)</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_WithholdingTax" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WithholdingTaxSampler" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Search&quot;:{&quot;Query&quot;:{&quot;Joins&quot;:[],&quot;CriteriaList&quot;:[{&quot;CriteriaList&quot;:null,&quot;ExistsSubquery&quot;:null,&quot;Filter&quot;:{&quot;Field&quot;:&quot;IssueCountryCode&quot;,&quot;ComparisonOperator&quot;:1,&quot;Value&quot;:&quot;as&quot;},&quot;LogicalOperator&quot;:0,&quot;IsNegated&quot;:false},{&quot;CriteriaList&quot;:null,&quot;ExistsSubquery&quot;:null,&quot;Filter&quot;:{&quot;Field&quot;:&quot;DomicileCountryCode&quot;,&quot;ComparisonOperator&quot;:1,&quot;Value&quot;:&quot;us&quot;},&quot;LogicalOperator&quot;:0,&quot;IsNegated&quot;:false}],&quot;Entity&quot;:&quot;WithholdingTax&quot;},&quot;Options&quot;:{&quot;PageNumber&quot;:0,&quot;PageSize&quot;:0,&quot;OrderBy&quot;:[],&quot;UseDistinct&quot;:false}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/WithholdingTax/search?$d=y&amp;$m=y&amp;$p=0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_ReporListAndtSort" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReportSortSampler" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;Search&quot;:{&quot;Query&quot;:{&quot;Joins&quot;:[],&quot;CriteriaList&quot;:[],&quot;Entity&quot;:&quot;APXReport&quot;},&quot;Options&quot;:{&quot;PageNumber&quot;:0,&quot;PageSize&quot;:0,&quot;OrderBy&quot;:[&quot;Name&quot;],&quot;UseDistinct&quot;:false}}}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/APXReport/search?$d=y&amp;$m=y</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_UserProfile" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UserInfoPageSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/UserInfo?$d=y&amp;$m=n&amp;$f=Large</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ProfilePageSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/ProfilePage?$d=y&amp;$m=n&amp;$t=UserPages&amp;$f=Large</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_APXReport_ExpandAll" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Query APXReport And Expand All Children" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Search&quot;: {&#xd;
        &quot;Query&quot;: {&#xd;
            &quot;Joins&quot;: [],&#xd;
            &quot;CriteriaList&quot;: [&#xd;
                {&#xd;
                    &quot;CriteriaList&quot;: null,&#xd;
                    &quot;ExistsSubquery&quot;: null,&#xd;
                    &quot;Filter&quot;: {&#xd;
                        &quot;Field&quot;: &quot;Name&quot;,&#xd;
                        &quot;ComparisonOperator&quot;: 8,&#xd;
                        &quot;Value&quot;: &quot;Portfolio Diversification&quot;&#xd;
                    },&#xd;
                    &quot;LogicalOperator&quot;: 0,&#xd;
                    &quot;IsNegated&quot;: false&#xd;
                }&#xd;
            ],&#xd;
            &quot;Entity&quot;: &quot;APXReport&quot;&#xd;
        },&#xd;
        &quot;Options&quot;: {&#xd;
            &quot;PageNumber&quot;: 0,&#xd;
            &quot;PageSize&quot;: 0,&#xd;
            &quot;OrderBy&quot;: [],&#xd;
            &quot;UseDistinct&quot;: false&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/APXReport/search?$d=y&amp;$m=y&amp;$e=All</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Catch request from UI that is using $expand=All; this can cover all children</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_APXReport_GetUnregisteredSSRSReports" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Unregistered SSRS Reports" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/APXReport?$t=unregisteredssrsreports&amp;$data=y&amp;$metadata=y</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_APXReport_FilterOneUnregisteredSSRSReportAndExpandAll" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Particular Unregistered SSRS Report And Expand ALL" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/APXReport?$t=unregisteredssrsreports&amp;$data=y&amp;$metadata=y&amp;Name=CoverPageSubreport&amp;$expand=all</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_APXReport_CRUD" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1497848643000</longProp>
        <longProp name="ThreadGroup.end_time">1497848643000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddAPXReport" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;ReportType&quot;: 0,&#xd;
        &quot;_Action&quot;: &quot;Insert&quot;,&#xd;
        &quot;ReportList&quot;: [&#xd;
            {&#xd;
                &quot;CategoryId&quot;: 10,&#xd;
                &quot;ClassId&quot;: 135,&#xd;
                &quot;Description&quot;: &quot;An API Test Rep Report&quot;,&#xd;
                &quot;DisplayName&quot;: &quot;APITestRep${__threadNum}&quot;,&#xd;
                &quot;IsAccessibleToAllRoles&quot;: true,&#xd;
                &quot;IsHidden&quot;: false,&#xd;
                &quot;Name&quot;: &quot;APITestRep${__threadNum}&quot;,&#xd;
                &quot;OwnedById&quot;: -14,&#xd;
                &quot;ReportFileName&quot;: &quot;${__threadNum}.rep&quot;,&#xd;
                &quot;ReportMode&quot;: &quot; &quot;,&#xd;
                &quot;_Action&quot;: &quot;Insert&quot;&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
]</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/APXReport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor - Parse and Configure Added JSON Object" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">// Turn API response JSON into an object called &apos;AddingResponse&apos;
eval(&apos;var AddingResponse = &apos; + prev.getResponseDataAsString());

var dataObject = JSON.parse(JSON.stringify(AddingResponse.Data[0]));
dataObject.Description = &quot;Updated Description&quot;;
dataObject._Action = &quot;Update&quot;;
dataObject.ReportList[0].Description = &quot;Updated Description&quot;;
dataObject.ReportList[0]._Action = &quot;Update&quot;;

vars.put(&quot;updatingBody&quot;, &quot;[&quot; + JSON.stringify(dataObject) + &quot;]&quot;);



/*
for (var counter = 1; counter &lt;= SearchResponse.responseData.results.length; counter++)	
{		
    var x = SearchResponse.responseData.results[counter - 1];
   vars.put(&quot;haveBoots&quot; + counter, x.unescapedUrl);
}
*/</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateAPXReport" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${updatingBody}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/APXReport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor - Parse and Configure Updated JSON Object" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">eval(&apos;var UpdatingResponse = &apos; + prev.getResponseDataAsString());

var dataObject = JSON.parse(JSON.stringify(UpdatingResponse.Data[0]));
dataObject._Action = &quot;Delete&quot;;

vars.put(&quot;deletingBody&quot;, &quot;[&quot; + JSON.stringify(dataObject) + &quot;]&quot;);</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteAPXReport" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${deletingBody}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/APXReport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor - Parse Deleted JSON Object" enabled="true">
            <stringProp name="scriptLanguage">javascript</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script">eval(&apos;var deletingResponse = &apos; + prev.getResponseDataAsString());

vars.put(&quot;deletedBody&quot;, JSON.stringify(deletingResponse));</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion - API Responses Without Exception" enabled="true">
          <collectionProp name="Asserion.test_strings">
            <stringProp name="49586">200</stringProp>
          </collectionProp>
          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
          <boolProp name="Assertion.assume_success">false</boolProp>
          <intProp name="Assertion.test_type">8</intProp>
        </ResponseAssertion>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_Macro_GetAllMacrosAndExpandAll" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Macros And Expand All" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Search&quot;: {&#xd;
        &quot;Query&quot;: {&#xd;
            &quot;Joins&quot;: [],&#xd;
            &quot;CriteriaList&quot;: [&#xd;
                {&#xd;
                    &quot;CriteriaList&quot;: null,&#xd;
                    &quot;ExistsSubquery&quot;: null,&#xd;
                    &quot;Filter&quot;: {&#xd;
                        &quot;Field&quot;: &quot;ClassID&quot;,&#xd;
                        &quot;ComparisonOperator&quot;: 2,&#xd;
                        &quot;Value&quot;: 123&#xd;
                    },&#xd;
                    &quot;LogicalOperator&quot;: 0,&#xd;
                    &quot;IsNegated&quot;: false&#xd;
                }&#xd;
            ],&#xd;
            &quot;Entity&quot;: &quot;Macro&quot;&#xd;
        },&#xd;
        &quot;Options&quot;: {&#xd;
            &quot;PageNumber&quot;: 0,&#xd;
            &quot;PageSize&quot;: 0,&#xd;
            &quot;OrderBy&quot;: [&#xd;
                &quot;Name&quot;&#xd;
            ],&#xd;
            &quot;UseDistinct&quot;: false&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/Macro/search?$d=y&amp;$m=y&amp;$c=0&amp;$e=All</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_Macro_FilterOneParticularMacroAndExpandAll" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Particular Macro And Expand All" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;Search&quot;: {&#xd;
        &quot;Query&quot;: {&#xd;
            &quot;Joins&quot;: [],&#xd;
            &quot;CriteriaList&quot;: [&#xd;
                {&#xd;
                    &quot;CriteriaList&quot;: null,&#xd;
                    &quot;ExistsSubquery&quot;: null,&#xd;
                    &quot;Filter&quot;: {&#xd;
                        &quot;Field&quot;: &quot;MacroID&quot;,&#xd;
                        &quot;ComparisonOperator&quot;: 1,&#xd;
                        &quot;Value&quot;: &quot;502&quot;&#xd;
                    },&#xd;
                    &quot;LogicalOperator&quot;: 0,&#xd;
                    &quot;IsNegated&quot;: false&#xd;
                }&#xd;
            ],&#xd;
            &quot;Entity&quot;: &quot;Macro&quot;&#xd;
        },&#xd;
        &quot;Options&quot;: {&#xd;
            &quot;PageNumber&quot;: 0,&#xd;
            &quot;PageSize&quot;: 0,&#xd;
            &quot;OrderBy&quot;: [],&#xd;
            &quot;UseDistinct&quot;: false&#xd;
        }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/Macro/search?$d=y&amp;$m=y</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="API_Login&amp;Out" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">2</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <longProp name="ThreadGroup.start_time">1479261680000</longProp>
        <longProp name="ThreadGroup.end_time">1479261680000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LoginSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/authenticate?loginname=${UserNameAdmin}&amp;password=${PasswordAdmin}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="LogoutSampler" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/authenticate?logout</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ReportingAPI_GetReportParameters" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1498471172000</longProp>
        <longProp name="ThreadGroup.end_time">1498471172000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetReportParameter" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/reporting/ssrs/ParameterXML/-8003</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ReportingAPI_GetReportPortfolios" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1498471172000</longProp>
        <longProp name="ThreadGroup.end_time">1498471172000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetReportPortfolios" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/portfoliobase</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ReportingAPI_GetFieldDependence" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1498471172000</longProp>
        <longProp name="ThreadGroup.end_time">1498471172000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetFieldDependence" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;parameterValue&quot;: {&#xd;
		&quot;name&quot;: &quot;ClassificationID1&quot;,&#xd;
		&quot;Value&quot;: [&#xd;
			{&#xd;
				&quot;dataValue&quot;: &quot;-4&quot;&#xd;
			}&#xd;
		]&#xd;
	},&#xd;
	&quot;ReportID&quot;: 9456,&#xd;
	&quot;rdlDataSetName&quot;: &quot;Exclusions1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/reporting/ssrs/ExecuteRdlDataSet</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ReportingAPI_RunPortfolioApparisal" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${LoopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${NumberOfThreads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${RampUpSeconds}</stringProp>
        <longProp name="ThreadGroup.start_time">1498471172000</longProp>
        <longProp name="ThreadGroup.end_time">1498471172000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RunPortfolioApparasial" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;Parameter&quot;: [&#xd;
    {&#xd;
      &quot;name&quot;: &quot;SessionGuid&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Portfolios&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;case&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;Date&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;2&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1999-12-31T08:00:00.000&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ReportingCurrencyCode&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;us&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ClassificationID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;-19&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ClassificationID2&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ClassificationID3&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;IncludeUnsupervisedAssets&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;5&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;False&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;DisplayOption&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;5&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;True&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;DisplayAnnIncome&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;5&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;False&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;DisplayAcqDate&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;5&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;False&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ReportTitle&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;Portfolio Appraisal&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ShowTaxLotsLumped&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ShowCurrencyFullPrecision&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;AccruedInterestID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;4&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;YieldOptionID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;4&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;BondCostBasisID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;5&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;MFBasisIncludeReinvest&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;UseSettlementDate&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;0&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ShowCurrentMBSFace&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ShowCurrentTIPSFace&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;LocaleID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1033&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;PriceTypeID&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;3&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;1&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ShowSecuritySymbol&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;y&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;OverridePortfolioSettings&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;5&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;True&quot;&#xd;
        }&#xd;
      ]&#xd;
    },&#xd;
    {&#xd;
      &quot;name&quot;: &quot;ServerURL&quot;,&#xd;
      &quot;primitiveType&quot;: &quot;1&quot;,&#xd;
      &quot;Value&quot;: [&#xd;
        {&#xd;
          &quot;dataValue&quot;: &quot;http://10apx2012r2/APXLogin/&quot;&#xd;
        }&#xd;
      ]&#xd;
    }&#xd;
  ],&#xd;
  &quot;Path&quot;: &quot;PortfolioAppraisal&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/apxlogin/api/internal/reporting/ssrs/RunReport</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <longProp name="ThreadGroup.start_time">1494566876000</longProp>
        <longProp name="ThreadGroup.end_time">1494566876000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </PostThreadGroup>
      <hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">import org.apache.jmeter.protocol.http.control.CookieManager;
import org.apache.jmeter.protocol.http.control.Cookie;
import org.apache.jmeter.testelement.property.JMeterProperty;
  
CookieManager manager = ctx.getCurrentSampler().getCookieManager();
int count = Integer.parseInt(props.getProperty(&quot;cookiecount&quot;));

for (int i = 0; i &lt; count; i++) {
    Cookie cookie = new Cookie(props.getProperty(&quot;cookie_name&quot; + i), 
    		  props.getProperty(&quot;cookie_value&quot; + i),
            props.getProperty(&quot;cookie_domain&quot; + i), 
            props.getProperty(&quot;cookie_path&quot; + i),
            Boolean.parseBoolean(props.getProperty(&quot;cookie_secure&quot; + i)),
            Long.parseLong(props.getProperty(&quot;cookie_expires&quot; + i)));
    manager.add(cookie);
}</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Logout-Cleanup" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${ServerName}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/APXlogin/api/internal/authenticate?logout</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <stringProp name="CookieManager.policy">standard</stringProp>
        <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
      </CookieManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ServerName" elementType="Argument">
            <stringProp name="Argument.name">ServerName</stringProp>
            <stringProp name="Argument.value">03apxqa2016.gencos.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">vmw12r2apxapi.gencos.com</stringProp>
          </elementProp>
          <elementProp name="UserName" elementType="Argument">
            <stringProp name="Argument.name">UserName</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">perf_ui</stringProp>
          </elementProp>
          <elementProp name="Password" elementType="Argument">
            <stringProp name="Argument.name">Password</stringProp>
            <stringProp name="Argument.value">advs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="UserNameAdmin" elementType="Argument">
            <stringProp name="Argument.name">UserNameAdmin</stringProp>
            <stringProp name="Argument.value">admin</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PasswordAdmin" elementType="Argument">
            <stringProp name="Argument.name">PasswordAdmin</stringProp>
            <stringProp name="Argument.value">advs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LoopCount" elementType="Argument">
            <stringProp name="Argument.name">LoopCount</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="NumberOfThreads" elementType="Argument">
            <stringProp name="Argument.name">NumberOfThreads</stringProp>
            <stringProp name="Argument.value">3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">30</stringProp>
          </elementProp>
          <elementProp name="RampUpSeconds" elementType="Argument">
            <stringProp name="Argument.name">RampUpSeconds</stringProp>
            <stringProp name="Argument.value">10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename">perfMonitoring.jtl</stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <stringProp name="start_offset"></stringProp>
        <stringProp name="end_offset"></stringProp>
        <boolProp name="include_checkbox_state">false</boolProp>
        <boolProp name="exclude_checkbox_state">false</boolProp>
        <collectionProp name="metricConnections">
          <collectionProp name="1090190593">
            <stringProp name="1912721528">${ServerName}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="678485523">
            <stringProp name="1912721528">${ServerName}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="2112896831">Disks I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1210523728">
            <stringProp name="1912721528">${ServerName}</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
