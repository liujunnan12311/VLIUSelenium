<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="server" elementType="Argument">
            <stringProp name="Argument.name">server</stringProp>
            <stringProp name="Argument.value">${__P(envTarget, vmw12apxcldprf1.gencos.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="UI_APX_Tests" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${loopCount}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <longProp name="ThreadGroup.start_time">1478575747000</longProp>
        <longProp name="ThreadGroup.end_time">1478575747000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryDetail" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try{
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));


    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountryDetail_CountryCode&apos;]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);
    
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryList" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);
    WDS.log.info(serverName);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();
    //WDS.log.info(&quot;Sample started on country page&quot;);

    //WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    //WDS.log.info(&quot;Wait until Country page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_PortfolioDetail" enabled="true">
          <stringProp name="WebDriverSampler.script">// JavaScript source code

var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample started on portfolio page&quot;);

    //WDS.log.info(&quot;Navigate to APX Cloud portfolio page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/PRTSummary&apos;);

    //WDS.log.info(&quot;Wait until portfolio page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;PRTSummary_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;PRTSummary_grid&quot;]//th[2]//input&apos;));
    countryCodeFilter.sendKeys(&apos;Port_385420&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    var casePortfolioXPath = &quot;//*[@id=&apos;PRTSummary_grid&apos;]/*//div[normalize-space(.)=&apos;Port_385420&apos;]&quot;;
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(casePortfolioXPath)));
    var casePortfolioRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(casePortfolioXPath));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();
    casePortfolioRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;prtCode&quot;]&apos;)));
    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_PortfolioList" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();
    //WDS.log.info(&quot;Sample started on portfolio page&quot;);

    //WDS.log.info(&quot;Navigate to APX Cloud portfolio page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/PRTSummary&apos;);

    //WDS.log.info(&quot;Wait until portfolio page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;PRTSummary_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();
    
    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_ReportList" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try{
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample started on report summary page...&quot;);
    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    //WDS.log.info(&quot;Navigate to APX Cloud Report summary page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/ReportSummary&apos;);

    //WDS.log.info(&quot;Wait until Report summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;ReportSummary_reportGrid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_ReportDetail" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    //WDS.log.info(&quot;Navigate to APX Cloud Report summary page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/ReportSummary&apos;);

    //WDS.log.info(&quot;Wait until Report summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;ReportSummary_reportGrid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var Report13FXPath = &quot;//*[@id=&apos;ReportSummary_reportGrid&apos;]/*//kendo-grid-list//apxgridcontrolwidget/apxlabeltextboxwidget/div[normalize-space(.)=&apos;13F Report&apos;]&quot;;
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(Report13FXPath)));
    var Report13FRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(Report13FXPath));

    //WDS.log.info(&quot;Sample started on report summary page...&quot;);
    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    Report13FRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;ReportEdit_repDisplayName&quot;]&apos;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_MacroList" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/MacroSummary&apos;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;MacroSummary_macroSummaryGrid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_MacroDetail" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/MacroSummary&apos;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;MacroSummary_macroSummaryGrid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var macroXPath = &quot;//*[@id=&apos;MacroSummary_macroSummaryGrid&apos;]/*//kendo-grid-list//apxgridcontrolwidget/apxlabeltextboxwidget/div[normalize-space(.)=&apos;Appraisal&apos;]&quot;;
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(macroXPath)));
    var abposMacroRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(macroXPath));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    abposMacroRowInSummaryPanel.click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;MacroDetail_macroName&quot;]&apos;)));

    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryEditTax" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var interaction = JavaImporter(org.openqa.selenium.interactions);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)));
    java.lang.Thread.sleep(3000);
    
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)).click();

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_cancelBtn&quot;]/button&apos;)));
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryAddTax" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var interaction = JavaImporter(org.openqa.selenium.interactions);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)));
    java.lang.Thread.sleep(3000);
    
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)).click();
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));

    java.lang.Thread.sleep(3000);
    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;SecInfoCountryDetail_WithholdingTaxGrid&apos;]//span[normalize-space(.)=&apos;Not Applicable&apos;]&quot;)));

    WDS.sampleResult.sampleEnd();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_cancelBtn&quot;]/button&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-dialog-actions//button[normalize-space(.)=&apos;Discard Changes&apos;]&quot;)).click();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryAddIssuing" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var interaction = JavaImporter(org.openqa.selenium.interactions);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);
    WDS.log.info(&quot;Wait until Country is filtered...&quot;);

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)));
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));

    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)).click();

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));
    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;SecInfoCountryDetail_WithholdingTaxGrid&apos;]//span[normalize-space(.)=&apos;Not Applicable&apos;]&quot;)));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    WDS.browser.findElement(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;SecInfoCountryDetail_WithholdingTaxGrid&apos;]//span[normalize-space(.)=&apos;Not Applicable&apos;]&quot;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//kendo-popup//li[normalize-space(.)=&apos;Norway&apos;]&quot;)));

    WDS.sampleResult.sampleEnd();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_cancelBtn&quot;]/button&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-dialog-actions//button[normalize-space(.)=&apos;Discard Changes&apos;]&quot;)).click();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryDeleteTax" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var interaction = JavaImporter(org.openqa.selenium.interactions);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)));
    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_editBtn&quot;]/button&apos;)).click();
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));

    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;SecInfoCountryDetail_WithholdingTaxGrid&apos;]//span[normalize-space(.)=&apos;Not Applicable&apos;]&quot;)));

    // Remove withholding tax
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//tr[1]/td[1]//apxbuttonwidget/button&apos;)).click();

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-dialog-actions//button[normalize-space(.)=&apos;Remove It&apos;]&quot;)).click();
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));
    WDS.sampleResult.sampleEnd();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_cancelBtn&quot;]/button&apos;)).click();
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-dialog-actions//button[normalize-space(.)=&apos;Discard Changes&apos;]&quot;)).click();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_LoginLoading" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); 
var support_ui = JavaImporter(org.openqa.selenium.support.ui);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var protocol = &apos;${protocol}&apos;;

// In the beginning, Go to Google to avoid cache for next time
WDS.browser.get(&apos;http://www.google.com&apos;);
java.lang.Thread.sleep(3000);

WDS.sampleResult.sampleStart();
WDS.sampleResult.getLatency();
//WDS.log.info(&quot;Sample started on Login page&quot;);

//WDS.log.info(&quot;Navigate to APX Cloud login page&quot;);
WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

//WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

//WDS.log.info(&quot;Sample ended&quot;);
WDS.sampleResult.sampleEnd();

// At the end, Go to Google to avoid cache for next time
WDS.browser.get(&apos;http://www.google.com&apos;);
java.lang.Thread.sleep(3000);</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryFilter" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    //WDS.log.info(&quot;Wait until the filtered results display...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing 1 items&apos;)]&quot;)));
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos;]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryWithHoldingTax" enabled="false">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(&apos;us&apos;);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;)));
    var usCountryRowInSummaryPanel = WDS.browser.findElement(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;us&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;));
    usCountryRowInSummaryPanel.click();

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]/*[contains(., &quot;Showing all&quot;)]&apos;)));
    var issuingCountryFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//th[1]/div/apxgridfilterwidget/div/kendo-dropdownlist/span/span[1]&apos;));
    issuingCountryFilter.click();
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-popup//li[normalize-space(.)=&apos;Chile&apos;]&quot;)).click();

    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    //WDS.log.info(&quot;Wait until issuing country filtered results display...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountryDetail_WithholdingTaxGrid&apos;]/*//span[contains(., &apos;Showing all&apos;)]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_ReportSummarySort" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    //WDS.log.info(&quot;Navigate to APX Cloud Report summary page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/ReportSummary&apos;);

    //WDS.log.info(&quot;Wait until Report summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;ReportSummary_reportGrid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    //WDS.log.info(&quot;Get all text from Name column on report summary page... &quot;);
    var results = WDS.browser.findElements(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;ReportSummary_reportGrid&apos;]//tr/td[1]&quot;));

    //WDS.log.info(&quot;The length is &quot; + results.size());
    //WDS.log.info(&quot;The first text is &quot; + results[0].getText());

    var lastIndex = results.size() - 1;
    //WDS.log.info(&quot;The last text is &quot; + results[lastIndex].getText());
    var lastText = results[lastIndex].getText();
    lastText = &quot;Withholding Tax Reclaim&quot;; // Hard-code for now

    WDS.log.info(&quot;Log out APX Cloud...&quot; + lastText);

    //WDS.log.info(&quot;Sample started on report summary page...&quot;);
    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    // click name column header to sort by Name
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;ReportSummary_reportGrid&quot;]//*/div[normalize-space(.)=&quot;Name&quot;]&apos;)).click();

    // Wait until sorting is finished
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxgridwidget[@id=&apos;ReportSummary_reportGrid&apos;]//tr[1]/td[normalize-space(.)=&apos;&quot; + lastText + &quot;&apos;]&quot;)));

    //WDS.log.info(&quot;Sample ended&quot;);
    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="UI_CountryCRUD" enabled="true">
          <stringProp name="WebDriverSampler.script">var pkg = JavaImporter(org.openqa.selenium); //WebDriver classes
var support_ui = JavaImporter(org.openqa.selenium.support.ui);//WebDriver classes
var interaction = JavaImporter(org.openqa.selenium.interactions);
var timeout = &apos;${timeoutSec}&apos;;
var wait = new support_ui.WebDriverWait(WDS.browser, timeout);
var serverName = &apos;${server}&apos;
var userName = &apos;${userName}&apos;;
var password = &apos;${password}&apos;;
var protocol = &apos;${protocol}&apos;;

try {
    WDS.log.info(&quot;Navigate to APX Cloud Login page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#&apos;);

    WDS.log.info(&quot;Wait until Login page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;)));

    WDS.log.info(&quot;Logging in to APX Cloud...&quot;);
    var userField = WDS.browser.findElement(pkg.By.xpath(&quot;//input[@placeholder=&apos;Username&apos;]&quot;));
    userField.click();
    userField.sendKeys(userName);

    var pwdField = WDS.browser.findElement(pkg.By.xpath(&apos;//input[@placeholder=&quot;Password&quot;]&apos;));
    pwdField.click();
    pwdField.sendKeys(password);

    var button = WDS.browser.findElement(pkg.By.xpath(&apos;//button[text()=&quot;LOG IN&quot;]&apos;));
    button.click();

    WDS.log.info(&quot;Wait until home page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//div[contains(text(), &apos;MENU&apos;)]&quot;)));

    WDS.log.info(&quot;Navigate to APX Cloud Country page&quot;);
    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/s/SecInfoCountry&apos;);

    WDS.log.info(&quot;Wait until Country summary page is loaded...&quot;);
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*[contains(., &apos;Showing&apos;)]&quot;)));

    var countryCode = &apos;xx&apos;;
    var countryCodeFilter = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_grid&quot;]//th[1]//div/input&apos;));
    countryCodeFilter.sendKeys(countryCode);
    countryCodeFilter.sendKeys(org.openqa.selenium.Keys.ENTER);
    java.lang.Thread.sleep(3000);

    var filteredResultXPath = &quot;//*[@id=&apos;SecInfoCountry_grid&apos;]/*//div[normalize-space(.)=&apos;&quot; + countryCode + &quot;&apos; and @class=&apos;apx-label-textbox-widget-value-display&apos;]&quot;;
    if (WDS.browser.findElements(pkg.By.xpath(filteredResultXPath)).size() != 0) { // delete if exists
        var action = new interaction.Actions(WDS.browser);
        var filteredCountry = WDS.browser.findElement(pkg.By.xpath(filteredResultXPath));
        action.contextClick(filteredCountry).perform();

        WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-popup//div[normalize-space(.)=&apos;Delete Country&apos;]&quot;)).click();
        WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-dialog-actions//button[.=&apos;Delete It&apos;]&quot;)).click();

        wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxnotificationwidget//div[@class=&apos;notification__msg&apos;]&quot;)));
        WDS.browser.navigate().refresh();
        java.lang.Thread.sleep(3000);
    }

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_newBtn&quot;]/button&apos;)));
    var addCountryButton = WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountry_newBtn&quot;]/button&apos;));
    addCountryButton.click();

    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_CountryCode&quot;]//input&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_CountryCode&quot;]//input&apos;)).sendKeys(countryCode);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_CountryName&quot;]//input&apos;)).sendKeys(countryCode);

    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_tabs&quot;]//div[@class=&quot;apx-tabstrip-tab-wrap&quot; and normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();
    
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)));
    java.lang.Thread.sleep(3000);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//button[normalize-space(.)=&quot;Withholding Tax&quot;]&apos;)).click();

    // Select Issuing Country
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[2]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[2]&apos;)).click();
    
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&quot;//kendo-popup//li[normalize-space(.)=&apos;Norway&apos;]&quot;)));
    WDS.browser.findElement(pkg.By.xpath(&quot;//kendo-popup//li[normalize-space(.)=&apos;Norway&apos;]&quot;)).click();

    // Dividend Tax %
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[4]//input&apos;)).sendKeys(&apos;1&apos;);

    // Dividend Reclaim %
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[5]//input&apos;)).sendKeys(&apos;1&apos;);

    // Interest Tax %
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[6]//input&apos;)).sendKeys(&apos;1&apos;);

    // Interest Reclaim %
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_WithholdingTaxGrid&quot;]//td[7]//input&apos;)).sendKeys(&apos;1&apos;);
    
 
    wait.until(support_ui.ExpectedConditions.elementToBeClickable(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_saveBtn&quot;]/button&apos;)));
    WDS.sampleResult.sampleStart();
    WDS.sampleResult.getLatency();

    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;SecInfoCountryDetail_saveBtn&quot;]/button&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&quot;//apxnotificationwidget//div[@class=&apos;notification__msg&apos; and normalize-space(.)=&apos;Country created&apos;]&quot;)));

    WDS.sampleResult.sampleEnd();

    WDS.log.info(&quot;Log out APX Cloud...&quot;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();

    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    java.lang.Thread.sleep(3000);
} catch (ex) {
    //WDS.log.error(ex.message);
    WDS.log.info(&apos;Error occured, go back to home page and out to clean up.&apos;);

    WDS.browser.get(protocol + &apos;://&apos; + serverName + &apos;/apxuilogin/#/home&apos;);
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;topnavbar_user&quot;]/apxiconsvgwidget/i&apos;)).click();
    wait.until(support_ui.ExpectedConditions.visibilityOfElementLocated(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)));
    WDS.browser.findElement(pkg.By.xpath(&apos;//*[@id=&quot;__pageHeader__&quot;]//*/a[.=&quot;Log out&quot;]&apos;)).click();
    throw ex;
}</stringProp>
          <stringProp name="WebDriverSampler.parameters"></stringProp>
          <stringProp name="WebDriverSampler.language">javascript</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
        <stringProp name="WebDriverConfig.proxy_type">SYSTEM</stringProp>
        <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
        <stringProp name="WebDriverConfig.http_host"></stringProp>
        <intProp name="WebDriverConfig.http_port">8080</intProp>
        <boolProp name="WebDriverConfig.use_http_for_all_protocols">true</boolProp>
        <stringProp name="WebDriverConfig.https_host"></stringProp>
        <intProp name="WebDriverConfig.https_port">8080</intProp>
        <stringProp name="WebDriverConfig.ftp_host"></stringProp>
        <intProp name="WebDriverConfig.ftp_port">8080</intProp>
        <stringProp name="WebDriverConfig.socks_host"></stringProp>
        <intProp name="WebDriverConfig.socks_port">8080</intProp>
        <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
        <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
        <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
        <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
        <stringProp name="ChromeDriverConfig.chromedriver_path">${chromeDriverPath}</stringProp>
        <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
        <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
      </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="chromeDriverPath" elementType="Argument">
            <stringProp name="Argument.name">chromeDriverPath</stringProp>
            <stringProp name="Argument.value">/usr/sbin/chromedriver</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userName" elementType="Argument">
            <stringProp name="Argument.name">userName</stringProp>
            <stringProp name="Argument.value">perf_ui</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">advs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loopCount" elementType="Argument">
            <stringProp name="Argument.name">loopCount</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="timeoutSec" elementType="Argument">
            <stringProp name="Argument.name">timeoutSec</stringProp>
            <stringProp name="Argument.value">120</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
